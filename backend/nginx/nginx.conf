worker_processes auto;
events { worker_connections 1024; }

http {
    # Nginx use leaky bucket/token bucket algorithm for rate limiting
    # Define a shared memory zone called 'rate_limit_zone' (10MB, 10 req/sec per IP)
    limit_req_zone $binary_remote_addr zone=rate_limit_zone:10m rate=10r/s;
    server {
        listen 80 default_server;

        server_name luapp;

        location /api/ {
            proxy_pass http://app:5000;
            # Apply rate limiting with burst handling (burst=20 allows short spikes)
            limit_req zone=rate_limit_zone burst=20 nodelay;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            proxy_pass http://frontend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }
    }

    # Define a server block for the frontend
    # server {
    #     listen 80;
    #     server_name frontend;

    #     location / {
    #         proxy_pass http://frontend:3000;
    #         proxy_http_version 1.1;
    #         proxy_set_header Upgrade $http_upgrade;
    #         proxy_set_header Connection 'upgrade';
    #         proxy_set_header Host $host;
    #         proxy_cache_bypass $http_upgrade;
    #     }
    # }
}
