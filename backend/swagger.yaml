openapi: 3.0.0
info:
  title: Lua Platform API
  version: 1.0.0
  description: API documentation for the Lua Platform

components:
  schemas:
    Form:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        opinion:
          type: array
          items:
            type: string
          default:
            [
              "very dissatisfied",
              "dissatisfied",
              "neutral",
              "satisfied",
              "very satisfied",
            ]
        fields:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              type:
                type: string
                enum:
                  [
                    "text",
                    "number",
                    "tel",
                    "date",
                    "time",
                    "email",
                    "textarea",
                    "file",
                    "checkbox",
                    "radio",
                    "color",
                  ]
              value:
                type: string
        organization:
          type: string
      required:
        - title
        - description
        - opinion
        - organization
    FormOutput:
      allOf:
        - $ref: "#/components/schemas/Form"
        - type: object
          properties:
            _id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    User:
      type: object
      properties:
        _id:
          type: string
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: ["user", "admin", "subadmin"]
          default: "user"
        organization:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Organization:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        identifier:
          type: string
        plan:
          type: string
          enum: ["Free", "Pro", "Enterprise"]
          default: "Free"
        members:
          type: array
          items:
            type: object
            properties:
              user:
                type: string
              role:
                type: string
                enum: ["admin", "subadmin", "user"]
        domains:
          type: array
          items:
            type: string
        email:
          type: string
        recommendationThreshold:
          type: number
          minimum: 0
          maximum: 1
          default: 0.5
        ticketCreationDelay:
          type: number
          minimum: 1
          maximum: 365
          default: 7
        notificationThreshold:
          type: number
          minimum: 0
          maximum: 1
          default: 0.7
        jiraConfig:
          type: object
          properties:
            host:
              type: string
            username:
              type: string
            apiToken:
              type: string
            projectKey:
              type: string
            issueType:
              type: string
              default: "Task"
            enabled:
              type: boolean
              default: false
            supportsPriority:
              type: boolean
              default: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Feedback:
      type: object
      properties:
        formId:
          type: string
        formTitle:
          type: string
        formDescription:
          type: string
        opinion:
          type: string
        fields:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              value:
                type: string
        organization:
          type: string
      required:
        - formId
        - formTitle
        - formDescription
        - opinion
        - organization
    FeedbackOutput:
      allOf:
        - $ref: "#/components/schemas/Feedback"
        - type: object
          properties:
            _id:
              type: string
            formId:
              type: string
            formTitle:
              type: string
            formDescription:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    Insight:
      type: object
      properties:
        feedbackId:
          type: string
        formId:
          type: string
        organization:
          type: string
        formTitle:
          type: string
        formDescription:
          type: string
        sentiment:
          type: string
          enum:
            [
              "very dissatisfied",
              "dissatisfied",
              "neutral",
              "satisfied",
              "very satisfied",
            ]
        feedbackDescription:
          type: string
        keywords:
          type: array
          items:
            type: string
        embedding:
          type: array
          items:
            type: number
      required:
        - feedbackId
        - formId
        - organization
        - formTitle
        - formDescription
        - sentiment
        - feedbackDescription
        - keywords

    InsightOutput:
      allOf:
        - $ref: "#/components/schemas/Insight"
        - type: object
          properties:
            _id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    ClusterAnalysis:
      type: object
      properties:
        formId:
          type: string
        organization:
          type: string
        clusterLabel:
          type: string
        clusterSummary:
          type: string
        insightIds:
          type: array
          items:
            type: string
        sentimentPercentage:
          type: number
          minimum: 0
          maximum: 100
        clusterSize:
          type: number
        recommendation:
          type: string
        impact:
          type: string
          enum: ["high", "medium", "low"]
        urgency:
          type: string
          enum: ["immediate", "soon", "later"]
        ticketCreated:
          type: boolean
          default: false
        lastTicketDate:
          type: string
          format: date-time
        jiraTicketId:
          type: string
        jiraTicketUrl:
          type: string
        jiraTicketStatus:
          type: string
        emailNotificationSent:
          type: boolean
          default: false
        emailNotificationDate:
          type: string
          format: date-time
        embeddings:
          type: array
          items:
            type: number
      required:
        - formId
        - organization
        - clusterLabel
        - clusterSummary
        - sentimentPercentage
        - clusterSize

    ClusterAnalysisOutput:
      allOf:
        - $ref: "#/components/schemas/ClusterAnalysis"
        - type: object
          properties:
            _id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

    PaymentIntent:
      type: object
      properties:
        clientSecret:
          type: string
      required:
        - clientSecret

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT

paths:
  /api/form/create:
    post:
      summary: Create a new form
      tags: [Forms]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Form"
      responses:
        201:
          description: Form created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/form:
    get:
      summary: Get all forms
      tags: [Forms]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      responses:
        200:
          description: Successfully retrieved forms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormOutput"
        204:
          description: No content
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/form/{id}:
    get:
      summary: Get a form by ID
      tags: [Forms]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved form
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Form not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/form/{id}/edit:
    patch:
      summary: Update a form by ID
      tags: [Forms]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Form"
      responses:
        200:
          description: Form updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Form not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/form/{id}/delete:
    delete:
      summary: Delete a form by ID
      tags: [Forms]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Form deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FormOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Form not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/form/organization/{organization}:
    get:
      summary: Get all forms for an organization
      tags: [Forms]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
          description: Organization ID
      responses:
        200:
          description: List of forms for the organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FormOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Forms not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/user/{id}:
    get:
      summary: Get a user by ID
      tags: [User]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        200:
          description: The user information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Server error
    post:
      summary: Update a user
      tags: [User]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 10
        window: 1m
        description: Rate limit of 10 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                currentPassword:
                  type: string
              required:
                - currentPassword
      responses:
        200:
          description: User updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User updated successfully"
        400:
          description: Username already exists or Email already exists
        401:
          description: Current password is incorrect or Token has expired or Invalid token
        403:
          description: Not Authorized - Missing token
        404:
          description: User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/user/me:
    get:
      summary: Get current user information
      tags: [User]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      responses:
        200:
          description: Current user information
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/user/{id}/addtoorganization:
    post:
      summary: Add user to organization
      tags: [User]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organizationIdentifier:
                  type: string
              required:
                - organizationIdentifier
      responses:
        200:
          description: User added to organization successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User added to organization successfully"
        400:
          description: Organization identifier is required or User already in this organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/user/{id}/deletefromorganization:
    post:
      summary: Remove user from organization
      tags: [User]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organizationIdentifier:
                  type: string
              required:
                - organizationIdentifier
      responses:
        200:
          description: User removed from organization successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "User removed from organization successfully"
        400:
          description: Organization identifier is required or User not in this organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      x-rate-limit:
        limit: 10
        window: 1m
        description: Rate limit of 10 requests per 1 minutes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: ["user", "admin", "subadmin"]
                  default: "user"
                organization:
                  type: string
                organizationName:
                  type: string
              required:
                - username
                - email
                - password

      responses:
        200:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        409:
          description: User already exists or Organization already exists
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/auth/login:
    post:
      summary: Log in a user
      tags: [Auth]
      x-rate-limit:
        limit: 10
        window: 1m
        description: Rate limit of 10 requests per 1 minutes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged in successfully"
        400:
          description: Invalid credentials
        404:
          description: User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/auth/logout:
    post:
      summary: Log out a user
      tags: [Auth]
      x-rate-limit:
        limit: 10
        window: 1m
        description: Rate limit of 10 requests per 1 minutes
      responses:
        200:
          description: User logged out successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logged out successfully"
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/feedback/{id}:
    post:
      summary: Create a new feedback
      tags: [Feedbacks]
      x-rate-limit:
        limit: 5
        window: 1m
        description: Rate limit of 5 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The form ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                opinion:
                  type: string
                fields:
                  type: array
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                      value:
                        type: string
                file:
                  type: string
                  format: binary
                  nullable: true
      responses:
        201:
          description: Feedback created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackOutput"
        404:
          description: Form not found
        400:
          description: Missing field or Invalid type for field value (expected type) (received type)
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error
    get:
      summary: Get feedback by ID
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Feedback ID
      responses:
        200:
          description: Successfully retrieved feedback
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Feedback not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/feedback:
    get:
      summary: Get all feedbacks
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      responses:
        200:
          description: Successfully retrieved feedbacks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedbackOutput"
        204:
          description: No content
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/feedback/form/{id}:
    get:
      summary: Get feedback by Form ID
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedbackOutput"
        204:
          description: No content
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/feedback/organization/{organization}:
    get:
      summary: Get feedbacks by organization
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
          description: Organization ID
      responses:
        200:
          description: Successfully retrieved feedbacks for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeedbackOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/feedback/{id}/delete:
    delete:
      summary: Delete feedback by ID
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Feedback ID
      responses:
        200:
          description: Feedback deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/FeedbackOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Feedback not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization:
    get:
      summary: Get all organizations
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      responses:
        200:
          description: Successfully retrieved organizations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
        204:
          description: No content
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{id}:
    get:
      summary: Get organization by ID
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Organization ID
      responses:
        200:
          description: Successfully retrieved organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/create:
    post:
      summary: Create a new organization
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                identifier:
                  type: string
                members:
                  type: array
                  items:
                    type: object
                    properties:
                      user:
                        type: string
                      role:
                        type: string
              required:
                - identifier
      responses:
        201:
          description: Organization created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        400:
          description: Organization identifier is required
        409:
          description: Organization with this identifier already exists
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/identifier/{identifier}:
    get:
      summary: Get organization by identifier
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      responses:
        200:
          description: Successfully retrieved organization
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{identifier}/edit:
    patch:
      summary: Update organization
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                members:
                  type: array
                  items:
                    type: object
                plan:
                  type: string
                  enum: ["Free", "Pro", "Enterprise"]
                domains:
                  type: array
                  items:
                    type: string
                email:
                  type: string
                recommendationThreshold:
                  type: number
                  minimum: 0
                  maximum: 1
                ticketCreationDelay:
                  type: number
                  minimum: 1
                  maximum: 365
                notificationThreshold:
                  type: number
                  minimum: 0
                  maximum: 1
                jiraConfig:
                  type: object
      responses:
        200:
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{identifier}/delete:
    delete:
      summary: Delete organization
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      responses:
        200:
          description: Organization deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Organization Deleted Successfully"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{identifier}/member/add/username:
    post:
      summary: Add member to organization by username
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
              required:
                - username
      responses:
        200:
          description: Member added successfully
        400:
          description: Username is required or User already in organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found or User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{identifier}/member/add/email:
    post:
      summary: Add member to organization by email
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        200:
          description: Member added successfully
        400:
          description: Email is required or User already in organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found or User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{identifier}/member/remove:
    post:
      summary: Remove member from organization
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
              required:
                - userId
      responses:
        200:
          description: Member removed successfully
        400:
          description: User ID is required or User not in organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found or User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{identifier}/member/change-role:
    post:
      summary: Change member role in organization
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                newRole:
                  type: string
                  enum: ["admin", "subadmin", "user"]
              required:
                - userId
                - newRole
      responses:
        200:
          description: Member role changed successfully
        400:
          description: User ID and new role are required or User not in organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found or User not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/organization/{identifier}/test-email:
    post:
      summary: Send test email to organization
      tags: [Organization]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: identifier
          schema:
            type: string
          required: true
          description: Organization identifier
      responses:
        200:
          description: Test email sent successfully
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        404:
          description: Organization not found
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  # Stats Endpoints
  /api/stats/{organization}/feedback-count:
    get:
      summary: Get feedback count over time for an organization
      tags: [Stats]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
          description: Organization identifier
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
          description: Start date for the feedback count
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
          description: End date for the feedback count
      responses:
        200:
          description: Successfully retrieved feedback count over time
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: Date in YYYY-MM-DD format
                    count:
                      type: number
                      description: Number of feedbacks on that date
        400:
          description: Start date and end date are required
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/stats/form/{formId}/feedback-count:
    get:
      summary: Get feedback count over time for a specific form
      tags: [Stats]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: formId
          schema:
            type: string
          required: true
          description: Form ID
        - in: query
          name: startDate
          schema:
            type: string
            format: date
          required: true
          description: Start date for the feedback count
        - in: query
          name: endDate
          schema:
            type: string
            format: date
          required: true
          description: End date for the feedback count
      responses:
        200:
          description: Successfully retrieved feedback count over time for form
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: Date in YYYY-MM-DD format
                    count:
                      type: number
                      description: Number of feedbacks on that date
        400:
          description: Start date and end date are required
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/stats/{organization}/feedback-total-by-form:
    get:
      summary: Get total feedback count grouped by form for an organization
      tags: [Stats]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
          description: Organization identifier
      responses:
        200:
          description: Successfully retrieved total feedback by form
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    _id:
                      type: string
                      description: Form ID
                    formTitle:
                      type: string
                      description: Form title
                    count:
                      type: number
                      description: Total number of feedbacks for this form
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/stats/form/{formId}/opinion-counts:
    get:
      summary: Get the count of opinions for a specific form
      tags: [Stats]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: formId
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved opinion counts for form
          content:
            application/json:
              schema:
                type: object
                properties:
                  formId:
                    type: string
                  formTitle:
                    type: string
                  opinionCounts:
                    type: array
                    items:
                      type: object
                      properties:
                        opinion:
                          type: string
                        count:
                          type: number
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/stats/{organization}/cluster-stats:
    get:
      summary: Get cluster statistics for an organization
      tags: [Stats]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
          description: Organization identifier
      responses:
        200:
          description: Successfully retrieved cluster statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  totalClusters:
                    type: number
                  formsWithClusters:
                    type: number
                  clustersWithTickets:
                    type: number
                  highImpactClusters:
                    type: number
                  urgentClusters:
                    type: number
                  averageSentimentPercentage:
                    type: number
                  averageClusterSize:
                    type: number
        404:
          description: No cluster analyses found for organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/stats/form/{formId}/cluster-sentiment:
    get:
      summary: Get cluster sentiment tracking by form over time
      tags: [Stats]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: formId
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved cluster sentiment tracking
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClusterAnalysisOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  # Insight Endpoints
  /api/insight:
    get:
      summary: Get all insights
      tags: [Insights]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      responses:
        200:
          description: Successfully retrieved all insights
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InsightOutput"
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/insight/{id}:
    get:
      summary: Get insight by ID
      tags: [Insights]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Insight ID
      responses:
        200:
          description: Successfully retrieved insight
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsightOutput"
        404:
          description: Insight not found
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/insight/{id}/delete:
    delete:
      summary: Delete insight by ID
      tags: [Insights]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Insight ID
      responses:
        200:
          description: Insight deleted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsightOutput"
        404:
          description: Insight not found
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/insight/feedback/{feedbackId}:
    get:
      summary: Get insights by feedback ID
      tags: [Insights]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: feedbackId
          schema:
            type: string
          required: true
          description: Feedback ID
      responses:
        200:
          description: Successfully retrieved insights for feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InsightOutput"
        404:
          description: No insights found for feedback
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/insight/organization/{organization}:
    get:
      summary: Get insights by organization
      tags: [Insights]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
          description: Organization identifier
      responses:
        200:
          description: Successfully retrieved insights for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InsightOutput"
        404:
          description: No insights found for organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/insight/form/{formId}:
    get:
      summary: Get insights by form ID
      tags: [Insights]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: formId
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved insights for form
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/InsightOutput"
        404:
          description: No insights found for form
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  # Cluster Endpoints
  /api/cluster/form/{formId}/cluster:
    post:
      summary: Cluster insights by form
      tags: [Clustering]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: formId
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully clustered insights
          content:
            application/json:
              schema:
                type: object
                properties:
                  formId:
                    type: string
                  totalInsights:
                    type: number
                  clusters:
                    type: array
                    items:
                      $ref: "#/components/schemas/ClusterAnalysisOutput"
        400:
          description: Invalid form ID or insufficient insights
        404:
          description: Form not found
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/cluster/form/{formId}:
    get:
      summary: Get cluster analysis by form
      tags: [Clustering]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: formId
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved cluster analysis for form
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClusterAnalysisOutput"
        404:
          description: No cluster analysis found for form
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  /api/cluster/organization/{organization}:
    get:
      summary: Get cluster analysis by organization
      tags: [Clustering]
      security:
        - bearerAuth: []
      x-rate-limit:
        limit: 100
        window: 1m
        description: Rate limit of 100 requests per 1 minutes
      parameters:
        - in: path
          name: organization
          schema:
            type: string
          required: true
          description: Organization identifier
      responses:
        200:
          description: Successfully retrieved cluster analysis for organization
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ClusterAnalysisOutput"
        404:
          description: No cluster analysis found for organization
        401:
          description: "Token has expired or Invalid token"
        403:
          description: Not Authorized - Missing token
        429:
          description: Rate limit exceeded
        500:
          description: Internal server error

  # Stripe Endpoints
  /api/stripe/create-payment-intent:
    post:
      summary: Create a payment intent for subscription
      tags: [Stripe]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Username of the user
                identifier:
                  type: string
                  description: Organization identifier
                tier:
                  type: string
                  enum: ["pro", "enterprise"]
                  description: Subscription tier
              required:
                - username
                - identifier
                - tier
      responses:
        200:
          description: Payment intent created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PaymentIntent"
        400:
          description: Invalid tier or missing required fields
        500:
          description: Payment intent failed or Stripe not configured
