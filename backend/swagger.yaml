openapi: 3.0.0
info:
  title: Lua Platform API
  version: 1.0.0
  description: API documentation for the Lua Platform

components:
  schemas:
    Form:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        opinion:
          type: array
          items:
            type: string
        fields:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              type:
                type: string
                enum: ["text", "number", "date", "email", "textarea", "file"]
              value:
                type: string
    FormOutput:
      allOf:
        - $ref: '#/components/schemas/Form'
        - type: object
          properties:
            _id:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time
    User:
      type: object
      properties:
        _id:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Feedback:
      type: object
      properties:
        opinion:
          type: string
        fields:
          type: array
          items:
            type: object
            properties:
              label:
                type: string
              value:
                type: string
    FeedbackOutput:
      allOf:
        - $ref: '#/components/schemas/Feedback'
        - type: object
          properties:
            _id:
              type: string
            formId:
              type: string
            formTitle:
              type: string
            formDescription:
              type: string
            createdAt:
              type: string
              format: date-time
            updatedAt:
              type: string
              format: date-time

securitySchemes:
  bearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT

paths:
  /forms/create:
    post:
      summary: Create a new form
      tags: [Forms]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
      responses:
        201:
          description: Form created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormOutput'
        500:
          description: Internal server error

  /forms:
    get:
      summary: Get all forms
      tags: [Forms]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully retrieved forms
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FormOutput'
        204:
          description: No content
        500:
          description: Internal server error

  /forms/{id}:
    get:
      summary: Get a form by ID
      tags: [Forms]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved form
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormOutput'
        404:
          description: Form not found
        500:
          description: Internal server error

  /forms/{id}/edit:
    patch:
      summary: Update a form by ID
      tags: [Forms]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Form'
      responses:
        200:
          description: Form updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormOutput'
        404:
          description: Form not found
        500:
          description: Internal server error

  /forms/{id}/delete:
    delete:
      summary: Delete a form by ID
      tags: [Forms]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Form deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormOutput'
        404:
          description: Form not found
        500:
          description: Internal server error

  /user/{id}:
    get:
      summary: Get a user by ID
      tags: [User]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The user ID
      responses:
        200:
          description: The user information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        500:
          description: Server error
        403:
          description: Forbidden

  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string

      responses:
        200:
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        409:
          description: User already exists
        500:
          description: Internal server error

  /auth/login:
    post:
      summary: Log in a user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        400:
          description: Invalid credentials
        404:
          description: User not found
        500:
          description: Internal server error

  /feedbacks/create:
    post:
      summary: Create a new feedback
      tags: [Feedbacks]
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The form ID
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                opinion:
                  type: string
                fields:
                  type: array
                  items:
                    type: object
                    properties:
                      label:
                        type: string
                      value:
                        type: string
                file:
                  type: string
                  format: binary
                  nullable: true
      responses:
        201:
          description: Feedback created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackOutput'
        404:
          description: Form not found
        400:
          description: Missing field or Invalid type for field value (expected type) (received type)
        500:
          description: Internal server error

  /feedbacks:
    get:
      summary: Get all feedbacks
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      responses:
        200:
          description: Successfully retrieved feedbacks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedbackOutput'
        204:
          description: No content
        500:
          description: Internal server error

  /feedbacks/{id}:
    get:
      summary: Get feedback by ID
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Feedback ID
      responses:
        200:
          description: Successfully retrieved feedback
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackOutput'
        404:
          description: Feedback not found
        500:
          description: Internal server error

  /feedbacks/form/{id}:
    get:
      summary: Get feedback by Form ID
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Form ID
      responses:
        200:
          description: Successfully retrieved feedback
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FeedbackOutput'
        204:
          description: No content
        500:
          description: Internal server error

  /feedbacks/{id}/delete:
    delete:
      summary: Delete feedback by ID
      tags: [Feedbacks]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Feedback ID
      responses:
        200:
          description: Feedback deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackOutput'
        404:
          description: Feedback not found
        500:
          description: Internal server error
