services:
  app:
    container_name: backend
    build:
      context: .
      dockerfile: Dockerfile  # Uses Dockerfile.prod for production
    ports:
      - "5000:5000" 
    env_file:
      - .env
    networks:
      - backend-network
    depends_on:
      - db
      - redis

  db:
    container_name: mongo
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_ROOT_USERNAME: ${MONGO_ROOT_USERNAME}
      MONGO_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_USERNAME: ${MONGO_USERNAME}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo_data:/data/db
    networks:
      - backend-network
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
    networks:
      - backend-network
  nginx:
    container_name: nginx
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - backend-network
    depends_on:
      - app
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - backend-network
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3000:3000"
    networks:
      - backend-network
    depends_on:
      - prometheus
  k6:
    container_name: k6
    image: grafana/k6
    volumes:
      - ./k6:/k6
    command: run /k6/load-test.js
    networks:
      - backend-network
    depends_on:
      - backend

volumes:
  mongo_data:

networks:
  backend-network:
